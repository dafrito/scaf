#!/bin/bash
PATH=/bin:/usr/bin

# Description: Generate an Autotools-backed Qt application project

die() {
    echo $* >&2
    exit 1;
}

realname() {
    if [ -n "$OWNER" ]; then
        echo $OWNER
    else
        # Extract a name from the passwd file
        grep "^`whoami`" /etc/passwd | cut -d: -f5
    fi;
}

generate_scaffold() {
    file=$1;
    shift;

    rsync -avzih $SCAFDATA/qtapp/ $file

    pushd $file
    file=`pwd`

    project=`basename $file`
    email=${EMAIL:-TODO@example.com}
    website=${WEBSITE:-http://www.TODO.com}

    project_obj=`echo $project | sed -re 's:^(.*)$:\u\1:' -e 's/[- ]//g'`
    project_primary=`echo $project | sed -re 's/[- +]/_/g'`
    project_define=`echo $project | sed -re "s/^(.*)$/\U\1/" -e 's/[- ]/_/g'`;

    if [ ! -e .scafrc ] || ! grep -q 'PROJECT=' .scafrc; then
        echo "PROJECT=$project" >>.scafrc
    fi;

    if [ ! -e $project.m4.in ]; then
        mv -v -n scaf.m4 $project.m4.in
    else
        rm scaf.m4
    fi;

    find -type f | xargs sed -ri \
        -e "s/@@PROJECT@@/$project/g" \
        -e "s/@@PROJECT_OBJ@@/$project_obj/g" \
        -e "s/@@PROJECT_PRIMARY@@/$project_primary/g" \
        -e "s/@@PROJECT_DEFINE@@/$project_define/g" \
        -e "s|@@WEBSITE@@|$website|g" \
        -e "s/@@YEAR@@/`date +%Y`/g" \
        -e "s:@@OWNER@@:`realname`:g" \
        -e "s|@@EMAIL@@|$email|g";

    if [ -n "$MODELINE" ]; then
        for sourcefile in `find . -name '*.cpp' -o -name '*.hpp'`; do
            if ! grep -q 'vim:' $sourcefile; then
                echo >>$sourcefile
                echo "// vim: set $MODELINE :" >>$sourcefile
            fi;
        done;
    fi;

    $SCAF license LICENSE

    if [ -z "$NO_GIT" ] && [ ! -e .git ]; then
        # Set up git
        git init .
        git commit -m"Initial commit" --allow-empty
        git add .

        # Force the addition of the m4/ directory, since it's ignored in .gitignore
        git add -f m4

        # Commit everything for our initial commit
        git commit -m"Initial scaffold for an Autotools-backed Qt project"
        git tag scaffold
    fi;

    # Get Autotools setup
    autoreconf -i

    popd
}

files=
for arg in $*; do
    case "$arg" in
        --without-git) NO_GIT=true ;;
        -f|--force) FORCE=true ;;
        -*) die "Unrecognized command: $arg" ;;
        *) files="$files $arg" ;;
    esac
done;
set $files

if [ "$#" -eq 0 ]; then
    die "At least one file must be provided";
fi;

for file in $*; do
    mkdir -p `dirname $file`
    if [ -z "$FORCE" ] && [ -e $file ]; then
        echo "$file already exists, ignoring." >&2
    else
        generate_scaffold $file
    fi
done;

# vim: set ts=4 sw=4 et :
